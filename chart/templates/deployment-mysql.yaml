{{- if false -}}
---
apiVersion: v1
kind: Service
metadata:
  name: "{{ include "arkid.mysql.fullname" . }}"
  labels:
    app.kubernetes.io/name: "{{ include "arkid.mysql.fullname" . }}"
    helm.sh/chart: {{ include "arkid.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  ports:
    - port: 3306
      targetPort: 3306
      protocol: TCP
      name: tcp3306
  selector:
    app.kubernetes.io/name: "{{ include "arkid.mysql.fullname" . }}"
    app.kubernetes.io/instance: {{ .Release.Name }}
---
apiVersion: {{ template "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: "{{ include "arkid.mysql.fullname" . }}"
  labels:
    app.kubernetes.io/name: "{{ include "arkid.mysql.fullname" . }}"
    helm.sh/chart: {{ include "arkid.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: "{{ include "arkid.mysql.fullname" . }}"
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "{{ include "arkid.mysql.fullname" . }}"
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- if .Values.mysql.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.mysql.nodeSelector | indent 8 }}
      {{- end }}
    {{- if or .Values.mysql.nodeAffinity .Values.mysql.podAffinity .Values.mysql.podAntiAffinity }}
      affinity:
      {{- with .Values.mysql.nodeAffinity }}
        nodeAffinity: {{- toYaml . | nindent 10 }}
      {{- end }}
      {{- with .Values.mysql.podAffinity }}
        podAffinity: {{- toYaml . | nindent 10 }}
      {{- end }}
      {{- if .Values.mysql.podAntiAffinity }}
        podAntiAffinity:
          {{- toYaml .Values.mysql.podAntiAffinity | nindent 10 }}
      {{- end }}
    {{- end }}
      initContainers:
      - image: {{ .Values.initContainers.image }}
        imagePullPolicy: {{ .Values.initContainers.pullPolicy }}
        command:
        - sh
        - -c
        - echo 65535 > /proc/sys/net/core/somaxconn
        name: setsysctl
        securityContext:
          privileged: true
      containers:
        - name: "{{ include "arkid.mysql.fullname" . }}"
          image: "{{ .Values.mysql.image }}"
          imagePullPolicy: {{ .Values.mysql.pullPolicy }}
          args:
            - "--character-set-server=utf8mb4"
            - "--collation-server=utf8mb4_unicode_ci"
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: {{ .Values.mysql.rootPassword}}
            - name: MYSQL_DATABASE
              value: {{ .Values.mysql.database}}
            - name: TZ
              value: 'Asia/Shanghai'
          volumeMounts:
            - name: arkid-data
              mountPath: /var/lib/mysql
              subPath: mysql/data
            - name: arkid-data
              mountPath: /etc/mysql/conf.d
              subPath: mysql/config
      volumes:
        - name: arkid-data
          {{- if .Values.persistence.init }}
          persistentVolumeClaim:
            claimName: "{{ include "arkid.fullname" . }}-mysql"
          {{- else }}
          emptyDir: {}
          {{- end }}
{{- end -}}