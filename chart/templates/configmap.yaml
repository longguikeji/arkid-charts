apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "arkid.fullname" . }}
  annotations:
    "helm.sh/resource-policy": keep
  labels:
    app: {{ template "arkid.name" . }}
    chart: {{ template "arkid.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  config.json: |
    {
      "ARKID_DOMAIN": "http://{{ template "arkid.fullname" . }}-be/",
      "LDAP_PORT": 1389,
      "BASE_DN": "dc=longguikeji, dc=com",
      "USER_ATTRIBUTES_MAPPING": {
        "uid": "uuid"
      },
      "GROUP_ATTRIBUTES_MAPPING": {
        "uid": "uuid"
      },
      "DEPARTMENT_ATTRIBUTES_MAPPING": {
        "uid": "uuid"
      }
    }
  desktop.conf: |
    server_names_hash_bucket_size 128;
    server {
        listen       80;
        #listen  [::]:80;
        #server_name  localhost;
        #charset koi8-r;
        #access_log  /var/log/nginx/host.access.log  main;
        gzip on;
        gzip_comp_level 5;
        gzip_min_length 1k;
        gzip_buffers 4 16k;
        gzip_proxied any;
        gzip_vary on;
        gzip_types
          application/javascript
          application/x-javascript
          text/javascript
          text/css
          text/xml
          application/xhtml+xml
          application/xml
          application/atom+xml
          application/rdf+xml
          application/rss+xml
          application/geo+json
          application/json
          application/ld+json
          application/manifest+json
          application/x-web-app-manifest+json
          image/svg+xml
          image/png
          image/jpeg
          image/gif
          image/x-icon
          text/x-cross-domain-policy;
        gzip_static on;
        gzip_disable "MSIE [1-6]\.";
        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
            try_files $uri /index.html;
        }
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
  fe.conf: |
    server_names_hash_bucket_size 128;
    server {
        listen       80;
        #listen  [::]:80;
        #server_name  localhost;
        #charset koi8-r;
        #access_log  /var/log/nginx/host.access.log  main;
        gzip on;
        gzip_comp_level 5;
        gzip_min_length 1k;
        gzip_buffers 4 16k;
        gzip_proxied any;
        gzip_vary on;
        gzip_types
          application/javascript
          application/x-javascript
          text/javascript
          text/css
          text/xml
          application/xhtml+xml
          application/xml
          application/atom+xml
          application/rdf+xml
          application/rss+xml
          application/geo+json
          application/json
          application/ld+json
          application/manifest+json
          application/x-web-app-manifest+json
          image/svg+xml
          image/png
          image/jpeg
          image/gif
          image/x-icon
          text/x-cross-domain-policy;
        gzip_static on;
        gzip_disable "MSIE [1-6]\.";
        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
            try_files $uri /index.html;
        }
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
  settings_local.py: |
    DEBUG = False
    # mysql database
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': '{{ include "arkid.databaseName" . }}',
            'USER': '{{ include "arkid.databaseUser" . }}',
            'PASSWORD': '{{ include "arkid.databasePassword" . }}',
            'HOST': '{{ include "arkid.databaseHost" . }}',
            'PORT': '{{ include "arkid.databasePort" . }}',
            'OPTIONS': {
                'autocommit': True,
                'init_command': 'SET default_storage_engine=InnoDB',
                'charset': 'utf8mb4',
            },
        }
    }
    # Redis cache
    REDIS_CONFIG = {
        'HOST': '{{ include "arkid.redisHost" . }}',
        'PORT': {{ include "arkid.redisPort" . }},
        'DB': {{ include "arkid.redisDB" . }},
        'PASSWORD': None,
    }

    REDIS_URL = 'redis://{}:{}/{}'.format(REDIS_CONFIG['HOST'], REDIS_CONFIG['PORT'],\
        REDIS_CONFIG['DB']) if REDIS_CONFIG['PASSWORD'] is None \
            else 'redis://:{}@{}:{}/{}'.format(REDIS_CONFIG['PASSWORD'],\
                REDIS_CONFIG['HOST'], REDIS_CONFIG['PORT'], REDIS_CONFIG['DB'])
    CACHES = {
        "default": {
            "BACKEND": "django.core.cache.backends.redis.RedisCache",
            "LOCATION": f"{REDIS_URL}/1",
        }
    }
    # CELERY
    CELERY_BROKER_URL = REDIS_URL
    DOMAIN="{{ .Values.ingress.host.name }}"
    PRIVATE_IP="{{ include "arkid.fullname" . }}-be.{{ .Release.Namespace }}.svc.cluster.local"
    CELERY_IMPORTS = ('tasks.tasks',)
    K8S_INSTALL_APP_URL = "http://{{ include "arkid.fullname" . }}-hc"
  supervisordcelery.conf: |-
    [supervisord]
    nodaemon=true

    [program:celery]
    command=/usr/local/bin/celery -A arkid.core.tasks.celery worker --loglevel=info -B
    stdout_logfile=/dev/stdout
    stdout_logfile_maxbytes=0
    stderr_logfile=/dev/stderr
    stderr_logfile_maxbytes=0

    [unix_http_server]
    file=/var/run/supervisor.sock
    chmod=0700

    [rpcinterface:supervisor]
    supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

    [supervisorctl]
    serverurl=unix:///var/run/supervisor.sock

  supervisord.conf: |-
    [supervisord]
    nodaemon=true

    [program:runserver]
    command=/usr/local/bin/python3.8 manage.py runserver 0.0.0.0:80 --noreload
    stdout_logfile=/dev/stdout
    stdout_logfile_maxbytes=0
    stderr_logfile=/dev/stderr
    stderr_logfile_maxbytes=0

    [unix_http_server]
    file=/var/run/supervisor.sock
    chmod=0700

    [rpcinterface:supervisor]
    supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

    [supervisorctl]
    serverurl=unix:///var/run/supervisor.sock

  arkid.local.toml: |
    name = "arkid"
    host = "{{ .Values.ingress.host.name }}"
    frontend_host = "{{ .Values.ingress.host.name }}"
    backend_host = "localhost:80"
    https_enabled = {{ include "httpsorNot" . }}
    [email]
    host = "smtp.qq.com"
    port = 25
    user = ""
    password = ""
    [extension]
    root = ["./arkid_extensions", "./extension_root"]
    install_dir = "./arkid_extensions"
        [extension.demo]
        config1 = 'demo_config1'
        config2 = 'demo_config2'
        [extension.aliyun]
        access_key = ''
        secret_key = ''
        template = ''
        signature = ''
        [extension.redis_cache]
        enabled = 1
        host = '{{ include "arkid.redisHost" . }}'
        port = {{ include "arkid.redisPort" . }}
        db = {{ include "arkid.redisDB" . }}
        [extension.feishu]
        enabled = 1
  default.conf: |
    server_names_hash_bucket_size 128;
    server {
        listen       80 default;
        set_real_ip_from 172.0.0.0/8;
        real_ip_header   X-Real-IP;
        gzip on;
        gzip_comp_level 5;
        gzip_min_length 1k;
        gzip_buffers 4 16k;
        gzip_proxied any;
        gzip_vary on;
        gzip_types
          application/javascript
          application/x-javascript
          text/javascript
          text/css
          text/xml
          application/xhtml+xml
          application/xml
          application/atom+xml
          application/rdf+xml
          application/rss+xml
          application/geo+json
          application/json
          application/ld+json
          application/manifest+json
          application/x-web-app-manifest+json
          image/svg+xml
          image/png
          image/jpeg
          image/gif
          image/x-icon
          text/x-cross-domain-policy;
        gzip_static on;
        gzip_disable "MSIE [1-6]\.";
        location /desktop/ {
            proxy_pass http://{{ template "arkid.fullname" . }}-desktop;
            proxy_set_header Host $host;
            proxy_set_header Arker portal;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location /superadmin/ {
            proxy_pass http://{{ template "arkid.fullname" . }}-be;
            proxy_set_header Host $host;
            proxy_set_header Arker portal;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location /api/ {
            proxy_pass http://{{ template "arkid.fullname" . }}-be;
            proxy_set_header Host $host;
            proxy_set_header Arker portal;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location /static/ {
            proxy_pass http://{{ template "arkid.fullname" . }}-be;
            proxy_set_header Host $host;
            proxy_set_header Arker portal;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location /siteapi/ {
            proxy_pass http://{{ template "arkid.fullname" . }}-be/siteapi/;
            proxy_set_header Host $host;
            proxy_set_header Arker portal;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location /ping/ {
            proxy_pass http://{{ template "arkid.fullname" . }}-be/ping/;
            proxy_set_header Host $host;
            proxy_set_header Arker portal;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
{{ if .Values.docs.enabled }}
        location /docs/ {
            proxy_pass http://{{ template "arkid.fullname" . }}-docs;
            proxy_set_header Host $host;
            proxy_set_header Arker portal;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
{{ end }}
        location /oauth/ {
            proxy_pass http://{{ template "arkid.fullname" . }}-be;
            proxy_set_header Host $host;
            proxy_set_header Arker portal;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location = / {
            proxy_pass http://{{ template "arkid.fullname" . }}-fe/index.html;
            proxy_set_header Host $host;
            proxy_set_header Arker portal;
            expires 1m;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location / {
            proxy_pass http://{{ template "arkid.fullname" . }}-fe;
            proxy_set_header Host $host;
            proxy_set_header Arker portal;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
{{ if .Values.docs.enabled }}
  mkdocs.yml: |
    site_name: ArkID
    site_url: http://0.0.0.0:80/docs/
    dev_addr: 0.0.0.0:80
    theme:
      name: "material"
      custom_dir: docs/overrides
      features:
        - navigation.instant
        - navigation.tabs
        - navigation.tracking
        - navigation.tabs.sticky
        - navigation.indexes
        - navigation.top
        - navigation.expand
        - toc.follow
        - content.tabs.link
        - content.code.annotate
      icon:
        repo: fontawesome/brands/github
      logo: assets/logo.png
      favicon: assets/logo2.png
    docs_dir: "docs/"
    plugins:
      - search
      - mkdocstrings:
          handlers:
            python:
              rendering:
                show_source: false
                show_root_heading: true
                # rendering_opt: "value"
              setup_commands:
                - "import os"
                - "import django"
                - "os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'arkid.settings')"
                - "django.setup()"
          watch:
            - arkid/core
    repo_url: https://github.com/longguikeji/arkid
    repo_name: longguikeji/arkid
    edit_uri: ""
    extra:
      homepage: https://longguikeji.github.io/arkid/
      social:
        - icon: fontawesome/brands/github
          link: https://github.com/longguikeji/arkid
          name: longguikeji/arkid
        - icon: fontawesome/solid/paper-plane
          link: mailto:support@longguikeji.com
          name: 技术支持
        - icon: fontawesome/solid/link
          link: https://saas.arkid.cc
          name: 中心ArkID
    copyright: Copyright &copy; 2018 - 2022 龙归科技
    markdown_extensions:
      - def_list
      - admonition
      - pymdownx.details
      - pymdownx.superfences
      - pymdownx.tabbed:
          alternate_style: true
      - meta
      - attr_list
      - md_in_html
      - toc:
          permalink: "#"
            # baselevel: 0
            # separator: "_"
      - pymdownx.highlight:
          anchor_linenums: true
      - pymdownx.inlinehilite
      - pymdownx.snippets
      - pymdownx.superfences:
          custom_fences:
            - name: mermaid
              class: mermaid
              format: !!python/name:pymdownx.superfences.fence_code_format
    extra_css:
      - stylesheets/extra.css
{{ end }}
